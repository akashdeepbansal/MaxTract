let ascii = List.rev (["/.notdef";"/.notdef";
"/.notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/exclamation"
;"/dblequote"
;"/Number"
;"/Dollar"
;"/percent"
;"/Ampersand"
;"/quote"
;"/parenleft"
;"/parenright"
;"/asterisk"
;"/plus"
;"/comma"
;"/hyphen"
;"/period"
;"/slash"
;"/zero"
;"/one"
;"/two"
;"/three"
;"/four"
;"/five"
;"/six"
;"/seven"
;"/eight"
;"/nine"
;"/colon"
;"/semicolon"
;"/less"
;"/equal"
;"/greater "
;"/question"
;"/at"
;"/A"
;"/B"
;"/C"
;"/D"
;"/E"
;"/F"
;"/G"
;"/H"
;"/I"
;"/J"
;"/K"
;"/L"
;"/M"
;"/N"
;"/O"
;"/P"
;"/Q"
;"/R"
;"/S"
;"/T"
;"/U"
;"/V"
;"/W"
;"/X"
;"/Y"
;"/Z"
;"/brackleft"
;"/backslash"
;"/brackright"
;"/circumflex"
;"/underscore"
;"/grave"
;"/a"
;"/b"
;"/c"
;"/d"
;"/e"
;"/f"
;"/g"
;"/h"
;"/i"
;"/j"
;"/k"
;"/l"
;"/m"
;"/n"
;"/o"
;"/p"
;"/q"
;"/r"
;"/s"
;"/t"
;"/u"
;"/v"
;"/w"
;"/x"
;"/y"
;"/z"
;"/braceleft"
;"/bar"
;"/braceright"
;"/tilde"
;"/notdef"
;"/euro"
;"/notdef"
;"/lowsinglequote"
;"/fhook"
;"/lowdoublequote"
;"/elipsis"
;"/dagger"
;"/doubledagger"
;"/asciicircum"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/pound"
;"/backslash"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/quoteright"
;"/dblquoteleft"
;"/notdef"
;"/notdef"
;"/notdef"
;"/fi"
;"/fl"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"
;"/notdef"]);;

let getAsciiChar  pos =
if (pos <256)
then   List.nth (List.rev ascii) pos
else "/nodef"
